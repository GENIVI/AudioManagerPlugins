<?xml version="1.0"?>
<xsd:schema targetNamespace="controller" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:c="controller">
    <xsd:include schemaLocation="customtypes.xsd" xmlns:c="controller" />
    <xsd:simpleType name="am_Error_e">
        <xsd:restriction base="xsd:string">
            <xsd:enumeration value="E_OK" />
            <xsd:enumeration value="E_UNKNOWN" />
            <xsd:enumeration value="E_OUT_OF_RANGE" />
            <xsd:enumeration value="E_NOT_USED" />
            <xsd:enumeration value="E_DATABASE_ERROR" />
            <xsd:enumeration value="E_ALREADY_EXISTS" />
            <xsd:enumeration value="E_NO_CHANGE" />
            <xsd:enumeration value="E_NOT_POSSIBLE" />
            <xsd:enumeration value="E_NON_EXISTENT" />
            <xsd:enumeration value="E_ABORTED" />
            <xsd:enumeration value="E_WRONG_FORMAT" />
            <xsd:enumeration value="E_COMMUNICATION" />
        </xsd:restriction>
    </xsd:simpleType>
    <xsd:simpleType name="am_GeniviAvailabilityReason_t">
        <xsd:restriction base="xsd:string">
            <xsd:enumeration value="AR_UNKNOWN">
                <xsd:annotation>
                    <xsd:documentation>The availability change reason is unknown.</xsd:documentation>
                </xsd:annotation>
            </xsd:enumeration>
            <xsd:enumeration value="AR_GENIVI_NEWMEDIA">
                <xsd:annotation>
                    <xsd:documentation>The availability change reason is new media.</xsd:documentation>
                </xsd:annotation>
            </xsd:enumeration>
            <xsd:enumeration value="AR_GENIVI_SAMEMEDIA">
                <xsd:annotation>
                    <xsd:documentation>The reason for availability change is the same media.</xsd:documentation>
                </xsd:annotation>
            </xsd:enumeration>
            <xsd:enumeration value="AR_GENIVI_NOMEDIA">
                <xsd:annotation>
                    <xsd:documentation>The reason for availability change is no media.</xsd:documentation>
                </xsd:annotation>
            </xsd:enumeration>
            <xsd:enumeration value="AR_GENIVI_TEMPERATURE">
                <xsd:annotation>
                    <xsd:documentation>The reason for availability change is the temperature.</xsd:documentation>
                </xsd:annotation>
            </xsd:enumeration>
            <xsd:enumeration value="AR_GENIVI_VOLTAGE">
                <xsd:annotation>
                    <xsd:documentation>The reason for availability change is the voltage.</xsd:documentation>
                </xsd:annotation>
            </xsd:enumeration>
            <xsd:enumeration value="AR_GENIVI_ERRORMEDIA">
                <xsd:annotation>
                    <xsd:documentation>The reason for availability change is the erroneous media.</xsd:documentation>
                </xsd:annotation>
            </xsd:enumeration>
        </xsd:restriction>
    </xsd:simpleType>
    <xsd:simpleType name="am_DomainState_e">
        <xsd:restriction base="xsd:string">
            <xsd:enumeration value="DS_UNKNOWN">
                <xsd:annotation>
                    <xsd:documentation>Domain status is unknown.</xsd:documentation>
                </xsd:annotation>
            </xsd:enumeration>
            <xsd:enumeration value="DS_CONTROLLED">
                <xsd:annotation>
                    <xsd:documentation>The domain is controlled domain.</xsd:documentation>
                </xsd:annotation>
            </xsd:enumeration>
            <xsd:enumeration value="DS_INDEPENDENT_STARTUP">
                <xsd:annotation>
                    <xsd:documentation>The domain has the independent startup.</xsd:documentation>
                </xsd:annotation>
            </xsd:enumeration>
            <xsd:enumeration value="DS_INDEPENDENT_RUNDOWN">
                <xsd:annotation>
                    <xsd:documentation>The domain has independent run down.</xsd:documentation>
                </xsd:annotation>
            </xsd:enumeration>
        </xsd:restriction>
    </xsd:simpleType>
    <xsd:simpleType name="am_ConnectionState_e">
        <xsd:restriction base="xsd:string">
            <xsd:enumeration value="CS_UNKNOWN" />
            <xsd:enumeration value="CS_CONNECTING" />
            <xsd:enumeration value="CS_CONNECTED" />
            <xsd:enumeration value="CS_DISCONNECTING" />
            <xsd:enumeration value="CS_DISCONNECTED" />
            <xsd:enumeration value="CS_SUSPENDED" />
        </xsd:restriction>
    </xsd:simpleType>
    <xsd:simpleType name="am_GeniviConnectionFormat_t">
        <xsd:restriction base="xsd:string">
            <xsd:enumeration value="CF_UNKNOWN">
                <xsd:annotation>
                    <xsd:documentation>unknown connection format.</xsd:documentation>
                </xsd:annotation>
            </xsd:enumeration>
            <xsd:enumeration value="CF_GENIVI_MONO">
                <xsd:annotation>
                    <xsd:documentation>The connection format is MONO</xsd:documentation>
                </xsd:annotation>
            </xsd:enumeration>
            <xsd:enumeration value="CF_GENIVI_STEREO">
                <xsd:annotation>
                    <xsd:documentation>The connection format is STEREO</xsd:documentation>
                </xsd:annotation>
            </xsd:enumeration>
            <xsd:enumeration value="CF_GENIVI_ANALOG">
                <xsd:annotation>
                    <xsd:documentation>The connection format is ANALOG.</xsd:documentation>
                </xsd:annotation>
            </xsd:enumeration>
            <xsd:enumeration value="CF_GENIVI_AUTO">
                <xsd:annotation>
                    <xsd:documentation>The connection format is AUTO.</xsd:documentation>
                </xsd:annotation>
            </xsd:enumeration>
        </xsd:restriction>
    </xsd:simpleType>
    <xsd:simpleType name="am_Availability_e">
        <xsd:restriction base="xsd:string">
            <xsd:enumeration value="A_UNKNOWN" />
            <xsd:enumeration value="A_AVAILABLE" />
            <xsd:enumeration value="A_UNAVAILABLE" />
            <xsd:enumeration value="A_MAX" />
        </xsd:restriction>
    </xsd:simpleType>
    <xsd:simpleType name="am_GeniviSystemPropertyType_t">
        <xsd:restriction base="xsd:string">
            <xsd:enumeration value="SYP_UNKNOWN" />
        </xsd:restriction>
    </xsd:simpleType>
    <xsd:simpleType name="am_GeniviNotificationType_t">
        <xsd:restriction base="xsd:string">
            <xsd:enumeration value="NT_UNKNOWN" />
        </xsd:restriction>
    </xsd:simpleType>
    <xsd:simpleType name="am_NotificationStatus_e">
        <xsd:restriction base="xsd:string">
            <xsd:enumeration value="NS_UNKNOWN">
                <xsd:annotation>
                    <xsd:documentation>Notification status is unknown.</xsd:documentation>
                </xsd:annotation>
            </xsd:enumeration>
            <xsd:enumeration value="NS_OFF">
                <xsd:annotation>
                    <xsd:documentation>Notification off.</xsd:documentation>
                </xsd:annotation>
            </xsd:enumeration>
            <xsd:enumeration value="NS_PERIODIC">
                <xsd:annotation>
                    <xsd:documentation>Notification is a periodic one.</xsd:documentation>
                </xsd:annotation>
            </xsd:enumeration>
            <xsd:enumeration value="NS_MINIMUM">
                <xsd:annotation>
                    <xsd:documentation>Notification is Minimum.</xsd:documentation>
                </xsd:annotation>
            </xsd:enumeration>
            <xsd:enumeration value="NS_MAXIMUM">
                <xsd:annotation>
                    <xsd:documentation>Notification is Maximum.</xsd:documentation>
                </xsd:annotation>
            </xsd:enumeration>
            <xsd:enumeration value="NS_CHANGE">
                <xsd:annotation>
                    <xsd:documentation>The notification is for change in some property.</xsd:documentation>
                </xsd:annotation>
            </xsd:enumeration>
        </xsd:restriction>
    </xsd:simpleType>
    <xsd:simpleType name="am_MuteState_e">
        <xsd:restriction base="xsd:string">
            <xsd:enumeration value="MS_UNKNOWN">
                <xsd:annotation>
                    <xsd:documentation>Mute state is unknown.</xsd:documentation>
                </xsd:annotation>
            </xsd:enumeration>
            <xsd:enumeration value="MS_MUTED">
                <xsd:annotation>
                    <xsd:documentation>The source or sink is muted.</xsd:documentation>
                </xsd:annotation>
            </xsd:enumeration>
            <xsd:enumeration value="MS_UNMUTED">
                <xsd:annotation>
                    <xsd:documentation>The source or sink is unmuted.</xsd:documentation>
                </xsd:annotation>
            </xsd:enumeration>
        </xsd:restriction>
    </xsd:simpleType>
    <xsd:simpleType name="am_InterruptState_e">
        <xsd:restriction base="xsd:string">
            <xsd:enumeration value="IS_UNKNOWN">
                <xsd:annotation>
                    <xsd:documentation>The interrupt state is unknown.</xsd:documentation>
                </xsd:annotation>
            </xsd:enumeration>
            <xsd:enumeration value="IS_OFF">
                <xsd:annotation>
                    <xsd:documentation>Interrupt state is OFF.</xsd:documentation>
                </xsd:annotation>
            </xsd:enumeration>
            <xsd:enumeration value="IS_INTERRUPTED">
                <xsd:annotation>
                    <xsd:documentation>The interrupt state is active.</xsd:documentation>
                </xsd:annotation>
            </xsd:enumeration>
        </xsd:restriction>
    </xsd:simpleType>
    <xsd:simpleType name="am_SourceState_e">
        <xsd:restriction base="xsd:string">
            <xsd:enumeration value="SS_UNKNOWN">
                <xsd:annotation>
                    <xsd:documentation>source state is unknown</xsd:documentation>
                </xsd:annotation>
            </xsd:enumeration>
            <xsd:enumeration value="SS_ON">
                <xsd:annotation>
                    <xsd:documentation>The source is ON</xsd:documentation>
                </xsd:annotation>
            </xsd:enumeration>
            <xsd:enumeration value="SS_OFF">
                <xsd:annotation>
                    <xsd:documentation>The source is OFF.</xsd:documentation>
                </xsd:annotation>
            </xsd:enumeration>
            <xsd:enumeration value="SS_PAUSED">
                <xsd:annotation>
                    <xsd:documentation>The source state is paused.</xsd:documentation>
                </xsd:annotation>
            </xsd:enumeration>
        </xsd:restriction>
    </xsd:simpleType>
    <xsd:simpleType name="am_GeniviRampType_t">
        <xsd:restriction base="xsd:string">
            <xsd:enumeration value="RAMP_UNKNOWN" />
            <xsd:enumeration value="RAMP_GENIVI_DIRECT" />
            <xsd:enumeration value="RAMP_GENIVI_NO_PLOP" />
            <xsd:enumeration value="RAMP_GENIVI_EXP_INV" />
            <xsd:enumeration value="RAMP_GENIVI_LINEAR" />
            <xsd:enumeration value="RAMP_GENIVI_EXP" />
        </xsd:restriction>
    </xsd:simpleType>
    <xsd:simpleType name="am_GeniviSoundPropertyType_t">
        <xsd:restriction base="xsd:string">
            <xsd:enumeration value="SP_UNKNOWN" />
            <xsd:enumeration value="SP_GENIVI_TREBLE" />
            <xsd:enumeration value="SP_GENIVI_BASS" />
            <xsd:enumeration value="SP_GENIVI_MID" />
        </xsd:restriction>
    </xsd:simpleType>
    <xsd:simpleType name="am_GeniviMainSoundPropertyType_t">
        <xsd:restriction base="xsd:string">
            <xsd:enumeration value="MSP_UNKNOWN">
                <xsd:annotation>
                    <xsd:documentation>The main source property is unknown.</xsd:documentation>
                </xsd:annotation>
            </xsd:enumeration>
            <xsd:enumeration value="MSP_GENIVI_TREBLE">
                <xsd:annotation>
                    <xsd:documentation>The main sound property for treble</xsd:documentation>
                </xsd:annotation>
            </xsd:enumeration>
            <xsd:enumeration value="MSP_GENIVI_BASS">
                <xsd:annotation>
                    <xsd:documentation>The main sound property for bass</xsd:documentation>
                </xsd:annotation>
            </xsd:enumeration>
            <xsd:enumeration value="MSP_GENIVI_MID">
                <xsd:annotation>
                    <xsd:documentation>The main sound property for mid</xsd:documentation>
                </xsd:annotation>
            </xsd:enumeration>
        </xsd:restriction>
    </xsd:simpleType>
    <xsd:simpleType name="am_ReservedSystemPropertyType_t">
        <xsd:restriction base="xsd:string">
            <xsd:enumeration value="SYP_GLOBAL_LOG_THRESHOLD">
                <xsd:annotation>
                    <xsd:documentation>61440 This is calculated as below 61440  128 * X + Y , 
                                       where 61440 is the reserved system property offset,
                                             X is the Reserved system property usecase ID(range 0-31) X=0 in this case,
                                             Y is the system property ID (0-127) Y=0 in this case. This system property controls 
                                             the threshold log level. 
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:enumeration>
            <xsd:enumeration value="SYP_REGISTRATION_ALLOW_UNKNOWN_ELEMENT">
                <xsd:annotation>
                    <xsd:documentation>61568 This is calculated as below 61440  128 * X + Y , 
                                       where 61440 is the reserved system property offset,
                                             X is the Reserved system property usecase ID(range 0-31) X=1 in this case,
                                             Y is the system property ID (0-127) Y=0 in this case. If this system property is
                                             set then unknown elements registration is allowed.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:enumeration>
            <xsd:enumeration value="SYP_REGISTRATION_DOMAIN_TIMEOUT">
                <xsd:annotation>
                    <xsd:documentation>61569 This is the domain registration timeout value in milliseconds</xsd:documentation>
                </xsd:annotation>
            </xsd:enumeration>
            <xsd:enumeration value="SYP_CONNECTION_ALLOW_ONLY_TOPOLOGY_ROUTE">
                <xsd:annotation>
                    <xsd:documentation>61696 This is calculated as below 61440  128 * X + Y , 
                                       where 61440 is the reserved system property offset,
                                             X is the Reserved system property usecase ID(range 0-31) X=2 in this case,
                                             Y is the system property ID (0-127) Y=0 in this case. If this property is set then the
                                             connection for which no topology is present in configuration are also allowed based on
                                             the route retrieved from audiomanager daemon.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:enumeration>
            <xsd:enumeration value="SYP_REGSTRATION_SOUND_PROP_RESTORED">
                <xsd:annotation>
                    <xsd:documentation> 61570 : If this property is set then it indecates that all sound properties are read from the persistence area 
                                        and set to respective RA, later command side application can request this system property to AM 
                                        to check the status of sound properties restore. 
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:enumeration>
        </xsd:restriction>
    </xsd:simpleType>
    <xsd:simpleType name="am_ReservedSoundPropertyType_t">
        <xsd:restriction base="xsd:string">
        </xsd:restriction>
    </xsd:simpleType>
    <xsd:simpleType name="am_ReservedMainSoundPropertyType_t">
        <xsd:restriction base="xsd:string">
        </xsd:restriction>
    </xsd:simpleType>
    <xsd:simpleType name="am_ReservedClassPropertyType_t">
        <xsd:restriction base="xsd:string">
            <xsd:enumeration value="CP_PER_SINK_CLASS_VOLUME_SUPPORT">
                <xsd:annotation>
                    <xsd:documentation>61440 If this property is non zero per sink volume management would be enabled for a class
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:enumeration>
        </xsd:restriction>
    </xsd:simpleType>
    <xsd:simpleType name="gc_MSPMappingDirection_e">
        <xsd:restriction base="xsd:string">
            <xsd:enumeration value="MD_MSP_TO_SP">
                <xsd:annotation>
                    <xsd:documentation>The mapping direction is from MSP to SP</xsd:documentation>
                </xsd:annotation>
            </xsd:enumeration>
            <xsd:enumeration value="MD_SP_TO_MSP">
                <xsd:annotation>
                    <xsd:documentation>The mapping direction is from SP to MSP</xsd:documentation>
                </xsd:annotation>
            </xsd:enumeration>
            <xsd:enumeration value="MD_BOTH">
                <xsd:annotation>
                    <xsd:documentation>The mapping is bidirectional</xsd:documentation>
                </xsd:annotation>
            </xsd:enumeration>
        </xsd:restriction>
    </xsd:simpleType>
    <xsd:simpleType name="gc_Order_e">
        <xsd:restriction base="xsd:string">
            <xsd:enumeration value="O_HIGH_PRIORITY" />
            <xsd:enumeration value="O_LOW_PRIORITY" />
            <xsd:enumeration value="O_NEWEST" />
            <xsd:enumeration value="O_OLDEST" />
        </xsd:restriction>
    </xsd:simpleType>
    <xsd:simpleType name="gc_Event_e">
        <xsd:restriction base="xsd:string">
            <xsd:enumeration value="TRIGGER_UNKNOWN">
                <xsd:annotation>
                    <xsd:documentation>This trigger unknown Trigger, following converntion of all enumerations in AM</xsd:documentation>
                </xsd:annotation>
            </xsd:enumeration>
            <xsd:enumeration value="USER_CONNECTION_REQUEST">
                <xsd:annotation>
                    <xsd:documentation>This trigger occurs when connect request is initiated from the command interface.</xsd:documentation>
                </xsd:annotation>
            </xsd:enumeration>
            <xsd:enumeration value="USER_DISCONNECTION_REQUEST">
                <xsd:annotation>
                    <xsd:documentation>This trigger occurs when disconnect request is initiated from the command interface.</xsd:documentation>
                </xsd:annotation>
            </xsd:enumeration>
            <xsd:enumeration value="USER_SET_SINK_MUTE_STATE">
                <xsd:annotation>
                    <xsd:documentation>This trigger occurs when mute request is initiated from the command interface.</xsd:documentation>
                </xsd:annotation>
            </xsd:enumeration>
            <xsd:enumeration value="USER_SET_VOLUME">
                <xsd:annotation>
                    <xsd:documentation>This trigger occurs when change volume request is initiated from the command interface.</xsd:documentation>
                </xsd:annotation>
            </xsd:enumeration>
            <xsd:enumeration value="USER_SET_SINK_MAIN_SOUND_PROPERTY">
                <xsd:annotation>
                    <xsd:documentation>This trigger occurs when set sink property request is initiated from the command interface.</xsd:documentation>
                </xsd:annotation>
            </xsd:enumeration>
            <xsd:enumeration value="USER_SET_SINK_MAIN_SOUND_PROPERTIES">
                <xsd:annotation>
                    <xsd:documentation>This trigger occurs when set sink properties request is initiated from the command interface.</xsd:documentation>
                </xsd:annotation>
            </xsd:enumeration>
            <xsd:enumeration value="USER_SET_SOURCE_MAIN_SOUND_PROPERTY">
                <xsd:annotation>
                    <xsd:documentation>This trigger occurs when set source property request is initiated from the command interface.</xsd:documentation>
                </xsd:annotation>
            </xsd:enumeration>
            <xsd:enumeration value="USER_SET_SOURCE_MAIN_SOUND_PROPERTIES">
                <xsd:annotation>
                    <xsd:documentation>This trigger occurs when set source properties request is initiated from the command interface.</xsd:documentation>
                </xsd:annotation>
            </xsd:enumeration>
            <xsd:enumeration value="USER_SET_SYSTEM_PROPERTY">
                <xsd:annotation>
                    <xsd:documentation>This trigger occurs when system property set request is received.</xsd:documentation>
                </xsd:annotation>
            </xsd:enumeration>
            <xsd:enumeration value="USER_SET_SYSTEM_PROPERTIES">
                <xsd:annotation>
                    <xsd:documentation>This trigger occurs when system properties set request is received.</xsd:documentation>
                </xsd:annotation>
            </xsd:enumeration>
            <xsd:enumeration value="USER_SET_SINK_MAIN_NOTIFICATION_CONFIGURATION">
                <xsd:annotation>
                    <xsd:documentation>This trigger occurs when user side set sink notification configuration is issued.</xsd:documentation>
                </xsd:annotation>
            </xsd:enumeration>
            <xsd:enumeration value="USER_SET_SOURCE_MAIN_NOTIFICATION_CONFIGURATION">
                <xsd:annotation>
                    <xsd:documentation>This trigger occurs when from user side set source notification is issued.</xsd:documentation>
                </xsd:annotation>
            </xsd:enumeration>
            <xsd:enumeration value="SYSTEM_SOURCE_AVAILABILITY_CHANGED">
                <xsd:annotation>
                    <xsd:documentation>This trigger occurs when a source availability status change is called by routing adaptor.</xsd:documentation>
                </xsd:annotation>
            </xsd:enumeration>
            <xsd:enumeration value="SYSTEM_SINK_AVAILABILITY_CHANGED">
                <xsd:annotation>
                    <xsd:documentation>This trigger occurs when a sink availability status change is called by routing adaptor.</xsd:documentation>
                </xsd:annotation>
            </xsd:enumeration>
            <xsd:enumeration value="SYSTEM_INTERRUPT_STATE_CHANGED">
                <xsd:annotation>
                    <xsd:documentation>This trigger occurs when routing adapter notifies the interrupt state change.</xsd:documentation>
                </xsd:annotation>
            </xsd:enumeration>
            <xsd:enumeration value="SYSTEM_SINK_MUTE_STATE_CHANGED">
                <xsd:annotation>
                    <xsd:documentation>This trigger occurs when system sends the notification to sink mute state changed.</xsd:documentation>
                </xsd:annotation>
            </xsd:enumeration>
            <xsd:enumeration value="SYSTEM_SINK_MAIN_SOUND_PROPERTY_CHANGED">
                <xsd:annotation>
                    <xsd:documentation>This trigger occurs when system sends the notification to sink main sound property change.</xsd:documentation>
                </xsd:annotation>
            </xsd:enumeration>
            <xsd:enumeration value="SYSTEM_SOURCE_MAIN_SOUND_PROPERTY_CHANGED">
                <xsd:annotation>
                    <xsd:documentation>This trigger occurs when system sends the notification to source main sound property change.</xsd:documentation>
                </xsd:annotation>
            </xsd:enumeration>
            <xsd:enumeration value="SYSTEM_VOLUME_CHANGED">
                <xsd:annotation>
                    <xsd:documentation>This trigger occurs when system sends the notification about volume change.</xsd:documentation>
                </xsd:annotation>
            </xsd:enumeration>
            <xsd:enumeration value="SYSTEM_SINK_NOTIFICATION_DATA_CHANGED">
                <xsd:annotation>
                    <xsd:documentation>This trigger occurs when system sends the notification about sink notification data changed.</xsd:documentation>
                </xsd:annotation>
            </xsd:enumeration>
            <xsd:enumeration value="SYSTEM_SOURCE_NOTIFICATION_DATA_CHANGED">
                <xsd:annotation>
                    <xsd:documentation>This trigger occurs when system sends the notification about source notification data changed.</xsd:documentation>
                </xsd:annotation>
            </xsd:enumeration>
            <xsd:enumeration value="SYSTEM_REGISTER_DOMAIN">
                <xsd:annotation>
                    <xsd:documentation>This trigger occurs when a new domain registration request is received</xsd:documentation>
                </xsd:annotation>
            </xsd:enumeration>
            <xsd:enumeration value="SYSTEM_REGISTER_SOURCE">
                <xsd:annotation>
                    <xsd:documentation>This trigger occurs when a new source registration is received.</xsd:documentation>
                </xsd:annotation>
            </xsd:enumeration>
            <xsd:enumeration value="SYSTEM_REGISTER_SINK">
                <xsd:annotation>
                    <xsd:documentation>This trigger occurs when a new sink registration request is received.</xsd:documentation>
                </xsd:annotation>
            </xsd:enumeration>
            <xsd:enumeration value="SYSTEM_REGISTER_GATEWAY">
                <xsd:annotation>
                    <xsd:documentation>This trigger occurs when a new gateway registration request is received.</xsd:documentation>
                </xsd:annotation>
            </xsd:enumeration>
            <xsd:enumeration value="SYSTEM_DEREGISTER_DOMAIN">
                <xsd:annotation>
                    <xsd:documentation>This trigger occurs when domain is unregistered</xsd:documentation>
                </xsd:annotation>
            </xsd:enumeration>
            <xsd:enumeration value="SYSTEM_DEREGISTER_SOURCE">
                <xsd:annotation>
                    <xsd:documentation>This trigger occurs when source is unregistered</xsd:documentation>
                </xsd:annotation>
            </xsd:enumeration>
            <xsd:enumeration value="SYSTEM_DEREGISTER_SINK">
                <xsd:annotation>
                    <xsd:documentation>This trigger occurs when sink is unregistered</xsd:documentation>
                </xsd:annotation>
            </xsd:enumeration>
            <xsd:enumeration value="SYSTEM_DEREGISTER_GATEWAY">
                <xsd:annotation>
                    <xsd:documentation>This trigger occurs when gateway is unregistered</xsd:documentation>
                </xsd:annotation>
            </xsd:enumeration>
            <xsd:enumeration value="SYSTEM_DOMAIN_REGISTRATION_COMPLETE">
                <xsd:annotation>
                    <xsd:documentation>This trigger occurs when system domain registration is received.</xsd:documentation>
                </xsd:annotation>
            </xsd:enumeration>
            <xsd:enumeration value="SYSTEM_CONNECTION_STATE_CHANGE">
                <xsd:annotation>
                    <xsd:documentation>This trigger occurs when main connection state changed occurs.</xsd:documentation>
                </xsd:annotation>
            </xsd:enumeration>
            <xsd:enumeration value="SYSTEM_STORED_SINK_VOLUME">
                <xsd:annotation>
                    <xsd:documentation>This trigger occurs sink volume is stored to persistence.</xsd:documentation>
                </xsd:annotation>
            </xsd:enumeration>
            <xsd:enumeration value="SYSTEM_ALL_DOMAIN_REGISTRATION_COMPLETE">
                <xsd:annotation>
                    <xsd:documentation>This trigger occurs when all domain registration is complete.</xsd:documentation>
                </xsd:annotation>
            </xsd:enumeration>
            <xsd:enumeration value="USER_ALL_TRIGGER">
                <xsd:annotation>
                    <xsd:documentation>This trigger is a special trigger for use of writing policy it matches all the triggers</xsd:documentation>
                </xsd:annotation>
            </xsd:enumeration>
            <xsd:enumeration value="TRIGGER_MAX" />
        </xsd:restriction>
    </xsd:simpleType>
    <xsd:simpleType name="gc_Registration_e">
        <xsd:restriction base="xsd:string">
            <xsd:enumeration value="REG_NONE">
                <xsd:annotation>
                    <xsd:documentation>0 The element shall not be registered.</xsd:documentation>
                </xsd:annotation>
            </xsd:enumeration>
            <xsd:enumeration value="REG_CONTROLLER">
                <xsd:annotation>
                    <xsd:documentation>1 The responsibility of registering element is with controller</xsd:documentation>
                </xsd:annotation>
            </xsd:enumeration>
            <xsd:enumeration value="REG_ROUTER">
                <xsd:annotation>
                    <xsd:documentation>2 The responsibility of registering element is with Router</xsd:documentation>
                </xsd:annotation>
            </xsd:enumeration>
        </xsd:restriction>
    </xsd:simpleType>
    <xsd:simpleType name="gc_Operator_e">
        <xsd:restriction base="xsd:string">
            <xsd:enumeration value="EQ" />
            <xsd:enumeration value="GT" />
            <xsd:enumeration value="GEQ" />
            <xsd:enumeration value="LT" />
            <xsd:enumeration value="LEQ" />
            <xsd:enumeration value="NE" />
            <xsd:enumeration value="INC" />
            <xsd:enumeration value="EXC" />
        </xsd:restriction>
    </xsd:simpleType>
    <xsd:simpleType name="gc_Boolean_e">
        <xsd:restriction base="xsd:string">
            <xsd:enumeration value="TRUE">
                <xsd:annotation>
                    <xsd:documentation>1</xsd:documentation>
                </xsd:annotation>
            </xsd:enumeration>
            <xsd:enumeration value="FALSE">
                <xsd:annotation>
                    <xsd:documentation>0</xsd:documentation>
                </xsd:annotation>
            </xsd:enumeration>
        </xsd:restriction>
    </xsd:simpleType>
    <xsd:simpleType name="gc_Action_e">
        <xsd:restriction base="xsd:string">
            <xsd:enumeration value="ACTION_UNKNOWN">
                <xsd:annotation>
                    <xsd:documentation>The action is NONE.</xsd:documentation>
                </xsd:annotation>
            </xsd:enumeration>
            <xsd:enumeration value="ACTION_CONNECT">
                <xsd:annotation>
                    <xsd:documentation>The action is to connect.</xsd:documentation>
                </xsd:annotation>
            </xsd:enumeration>
            <xsd:enumeration value="ACTION_DISCONNECT">
                <xsd:annotation>
                    <xsd:documentation>disconnect action.</xsd:documentation>
                </xsd:annotation>
            </xsd:enumeration>
            <xsd:enumeration value="ACTION_SET_VOLUME">
                <xsd:annotation>
                    <xsd:documentation>Source/Sink volume change action</xsd:documentation>
                </xsd:annotation>
            </xsd:enumeration>
            <xsd:enumeration value="ACTION_LIMIT">
                <xsd:annotation>
                    <xsd:documentation>limit volume action</xsd:documentation>
                </xsd:annotation>
            </xsd:enumeration>
            <xsd:enumeration value="ACTION_UNLIMIT">
                <xsd:annotation>
                    <xsd:documentation>unlimit volume action</xsd:documentation>
                </xsd:annotation>
            </xsd:enumeration>
            <xsd:enumeration value="ACTION_PUSH">
                <xsd:annotation>
                    <xsd:documentation>push action</xsd:documentation>
                </xsd:annotation>
            </xsd:enumeration>
            <xsd:enumeration value="ACTION_POP">
                <xsd:annotation>
                    <xsd:documentation>pop action</xsd:documentation>
                </xsd:annotation>
            </xsd:enumeration>
            <xsd:enumeration value="ACTION_SUSPEND">
                <xsd:annotation>
                    <xsd:documentation>suspend action</xsd:documentation>
                </xsd:annotation>
            </xsd:enumeration>
            <xsd:enumeration value="ACTION_RESUME">
                <xsd:annotation>
                    <xsd:documentation>resume action</xsd:documentation>
                </xsd:annotation>
            </xsd:enumeration>
            <xsd:enumeration value="ACTION_MUTE">
                <xsd:annotation>
                    <xsd:documentation>mute action</xsd:documentation>
                </xsd:annotation>
            </xsd:enumeration>
            <xsd:enumeration value="ACTION_UNMUTE">
                <xsd:annotation>
                    <xsd:documentation>unmute action</xsd:documentation>
                </xsd:annotation>
            </xsd:enumeration>
            <xsd:enumeration value="ACTION_SET_PROPERTY">
                <xsd:annotation>
                    <xsd:documentation>set sink property action</xsd:documentation>
                </xsd:annotation>
            </xsd:enumeration>
            <xsd:enumeration value="ACTION_SET_PROPERTIES">
                <xsd:annotation>
                    <xsd:documentation>set source or sink properties action</xsd:documentation>
                </xsd:annotation>
            </xsd:enumeration>
            <xsd:enumeration value="ACTION_REGISTER">
                <xsd:annotation>
                    <xsd:documentation>Register element action</xsd:documentation>
                </xsd:annotation>
            </xsd:enumeration>
            <xsd:enumeration value="ACTION_DEBUG">
                <xsd:annotation>
                    <xsd:documentation>Debug action for debug purpose</xsd:documentation>
                </xsd:annotation>
            </xsd:enumeration>
            <xsd:enumeration value="ACTION_SET_SYSTEM_PROPERTY">
                <xsd:annotation>
                    <xsd:documentation>set system property action</xsd:documentation>
                </xsd:annotation>
            </xsd:enumeration>
            <xsd:enumeration value="ACTION_SET_SYSTEM_PROPERTIES">
                <xsd:annotation>
                    <xsd:documentation>set system properties action</xsd:documentation>
                </xsd:annotation>
            </xsd:enumeration>
            <xsd:enumeration value="ACTION_SET_NOTIFICATION_CONFIGURATION">
                <xsd:annotation>
                    <xsd:documentation>set notification configuration action</xsd:documentation>
                </xsd:annotation>
            </xsd:enumeration>
        </xsd:restriction>
    </xsd:simpleType>
    <xsd:simpleType name="gc_Class_e">
        <xsd:restriction base="xsd:string">
            <xsd:enumeration value="C_PLAYBACK">
                <xsd:annotation>
                    <xsd:documentation>1 The class is playback type.</xsd:documentation>
                </xsd:annotation>
            </xsd:enumeration>
            <xsd:enumeration value="C_CAPTURE">
                <xsd:annotation>
                    <xsd:documentation>The class is capture type.</xsd:documentation>
                </xsd:annotation>
            </xsd:enumeration>
        </xsd:restriction>
    </xsd:simpleType>
    <xsd:simpleType name="am_AvailabilityReason_t">
        <xsd:union memberTypes="c:am_GeniviAvailabilityReason_t c:am_CustomAvailabilityReason_t c:gc_ReqMacro_e c:function" />
    </xsd:simpleType>
    <xsd:simpleType name="am_ConnectionFormat_t">
        <xsd:union memberTypes="c:am_GeniviConnectionFormat_t c:am_CustomConnectionFormat_t" />
    </xsd:simpleType>
    <xsd:simpleType name="am_NotificationType_t">
        <xsd:union memberTypes="c:am_GeniviNotificationType_t c:am_CustomNotificationType_t c:gc_ReqMacro_e c:function" />
    </xsd:simpleType>
    <xsd:simpleType name="am_SystemPropertyType_t">
        <xsd:union memberTypes="c:am_GeniviSystemPropertyType_t c:am_ReservedSystemPropertyType_t c:am_CustomSystemPropertyType_t c:gc_ReqMacro_e c:function" />
    </xsd:simpleType>
    <xsd:simpleType name="am_RampType_t">
        <xsd:union memberTypes="c:am_GeniviRampType_t c:am_CustomRampType_t" />
    </xsd:simpleType>
    <xsd:simpleType name="am_SoundPropertyType_t">
        <xsd:union memberTypes="c:am_GeniviSoundPropertyType_t c:am_ReservedSoundPropertyType_t c:am_CustomSoundPropertyType_t" />
    </xsd:simpleType>
    <xsd:simpleType name="am_GeniviClassPropertyType_t">
        <xsd:restriction base="xsd:string">
        </xsd:restriction>
    </xsd:simpleType>
    <xsd:simpleType name="am_MainSoundPropertyType_t">
        <xsd:union memberTypes="c:am_GeniviMainSoundPropertyType_t c:am_ReservedMainSoundPropertyType_t c:am_CustomMainSoundPropertyType_t c:gc_ReqMacro_e c:function" />
    </xsd:simpleType>
    <xsd:simpleType name="am_ClassPropertyType_t">
        <xsd:union memberTypes="c:am_GeniviClassPropertyType_t c:am_ReservedClassPropertyType_t c:am_CustomClassPropertyType_t" />
    </xsd:simpleType>
    <xsd:simpleType name="am_ClassID_t">
        <xsd:union memberTypes="c:am_ClassID_e xsd:unsignedShort" />
    </xsd:simpleType>
    <xsd:simpleType name="am_sourceID_t">
        <xsd:union memberTypes="c:am_SourceID_e xsd:unsignedShort" />
    </xsd:simpleType>
    <xsd:simpleType name="am_sinkID_t">
        <xsd:union memberTypes="c:am_SinkID_e xsd:unsignedShort" />
    </xsd:simpleType>
    <xsd:simpleType name="stringListType">
        <xsd:list itemType="xsd:string"></xsd:list>
    </xsd:simpleType>
    <xsd:simpleType name="short">
        <xsd:list itemType="xsd:short" />
    </xsd:simpleType>
    <xsd:complexType name="am_SystemProperty_s">
        <xsd:attribute name="type" type="c:am_SystemPropertyType_t" use="required" />
        <xsd:attribute name="value" type="xsd:short" use="required" />
        <xsd:attribute name="isPersistenceSupported" type="c:gc_Boolean_e" use="optional"/>
    </xsd:complexType>
    <xsd:complexType name="am_Availability_s">
        <xsd:attribute name="availability" type="c:am_Availability_e" use="required" />
        <xsd:attribute name="availabilityReason" type="c:am_AvailabilityReason_t" use="required" />
    </xsd:complexType>
    <xsd:complexType name="gc_SoundProperty_s">
        <xsd:attribute name="type" type="c:am_SoundPropertyType_t" use="required" />
        <xsd:attribute name="value" type="xsd:short" use="required" />
        <xsd:attribute name="minValue" type="xsd:short" use="optional" />
        <xsd:attribute name="maxValue" type="xsd:short" use="optional" />
    </xsd:complexType>
    <xsd:complexType name="soundPropertiesTemplate">
        <xsd:sequence>
            <xsd:element name="soundProperty" type="c:gc_SoundProperty_s" minOccurs="1" maxOccurs="unbounded" />
        </xsd:sequence>
        <xsd:attribute name="name" type="xsd:string" use="required" />
    </xsd:complexType>
    <xsd:complexType name="gc_MainSoundProperty_s">
        <xsd:attribute name="type" type="c:am_MainSoundPropertyType_t" use="required" />
        <xsd:attribute name="value" type="xsd:short" use="required" />
        <xsd:attribute name="minValue" type="xsd:short" use="optional" />
        <xsd:attribute name="maxValue" type="xsd:short" use="optional" />
        <xsd:attribute name="isPersistenceSupported" type="c:gc_Boolean_e" use="optional"/>
    </xsd:complexType>
    <xsd:complexType name="mainSoundPropertiesTemplate">
        <xsd:sequence>
            <xsd:element name="mainSoundProperty" type="c:gc_MainSoundProperty_s" minOccurs="1" maxOccurs="unbounded" />
        </xsd:sequence>
        <xsd:attribute name="name" type="xsd:string" use="required" />
    </xsd:complexType>
    <xsd:complexType name="mapMainSoundPropertiesToSoundProperties">
        <xsd:simpleContent>
            <xsd:extension base="xsd:string">
                <xsd:attribute name="mappingDirection" type="c:gc_MSPMappingDirection_e" use="optional" />
            </xsd:extension>
        </xsd:simpleContent>
    </xsd:complexType>
    <xsd:complexType name="listSourceVolumeMap">
        <xsd:sequence>
            <xsd:element name="tableEntry" minOccurs="2" maxOccurs="unbounded">
                <xsd:simpleType>
                    <xsd:restriction base="xsd:string">
                        <xsd:pattern value="[+-]?[0-9]+\.[0-9]+,[+-]?[0-9]+\.[0-9]+" />
                    </xsd:restriction>
                </xsd:simpleType>
            </xsd:element>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:complexType name="listMainVolumesToNormalizedVolumes">
        <xsd:sequence>
            <xsd:element name="tableEntry" minOccurs="2" maxOccurs="unbounded">
                <xsd:simpleType>
                    <xsd:restriction base="xsd:string">
                        <xsd:pattern value="[+-]?[0-9]+,[+-]?[0-9]+\.[0-9]+" />
                    </xsd:restriction>
                </xsd:simpleType>
            </xsd:element>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:complexType name="listNormalizedVolumesToDecibelVolumes">
        <xsd:sequence>
            <xsd:element name="tableEntry" minOccurs="2" maxOccurs="unbounded">
                <xsd:simpleType>
                    <xsd:restriction base="xsd:string">
                        <xsd:pattern value="[+-]?[0-9]+\.[0-9]+,[+-]?[0-9]+\.[0-9]+" />
                    </xsd:restriction>
                </xsd:simpleType>
            </xsd:element>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:complexType name="listSystemProperties">
        <xsd:sequence>
            <xsd:element name="systemProperty" type="c:am_SystemProperty_s" minOccurs="1" maxOccurs="unbounded" />
        </xsd:sequence>
    </xsd:complexType>
    <xsd:complexType name="am_class_s">
        <xsd:attribute name="id" type="c:am_ClassID_t" use="optional" />
        <xsd:attribute name="name" type="xsd:string" use="required" />
        <xsd:attribute name="type" type="c:gc_Class_e" use="optional" />
    </xsd:complexType>
    <xsd:complexType name="am_Source_s">
        <xsd:sequence>
            <xsd:element name="notificationConfiguration" type="c:am_NotificationConfiguration_s" minOccurs="0" maxOccurs="unbounded" />
            <xsd:element name="mainNotificationConfiguration" type="c:am_NotificationConfiguration_s" minOccurs="0" maxOccurs="unbounded" />
            <xsd:element name="availability" type="c:am_Availability_s" minOccurs="0" maxOccurs="1" />
            <xsd:element name="soundProperty" type="c:gc_SoundProperty_s" minOccurs="0" maxOccurs="unbounded" />
            <xsd:element name="mainSoundProperty" type="c:gc_MainSoundProperty_s" minOccurs="0" maxOccurs="unbounded" />
        </xsd:sequence>
        <xsd:attribute name="id" type="c:am_sourceID_t" use="optional" />
        <xsd:attribute name="domainName" type="xsd:string" use="optional" />
        <xsd:attribute name="name" type="xsd:string" use="required" />
        <xsd:attribute name="volume" type="xsd:short" use="optional" />
        <xsd:attribute name="visible" type="c:gc_Boolean_e" use="optional" />
        <xsd:attribute name="className" type="xsd:string" use="optional" />
        <xsd:attribute name="sourceState" type="c:am_SourceState_e" use="optional" />
        <xsd:attribute name="interruptState" type="c:am_InterruptState_e" use="optional" />
        <xsd:attribute name="connectionFormat" type="xsd:string" use="optional" />
        <xsd:attribute name="soundPropertiesTemplateName" type="xsd:string" use="optional" />
        <xsd:attribute name="mainSoundPropertiesTemplateName" type="xsd:string" use="optional" />
        <xsd:attribute name="notificationConfigurationsTemplateName" type="xsd:string" use="optional" />
        <xsd:attribute name="mainNotificationConfigurationsTemplateName" type="xsd:string" use="optional" />
        <xsd:attribute name="connectionFormatsTemplateName" type="xsd:string" use="optional" />
    </xsd:complexType>
    <xsd:complexType name="am_Sink_s">
        <xsd:sequence>
            <xsd:element name="notificationConfiguration" type="c:am_NotificationConfiguration_s" minOccurs="0" maxOccurs="unbounded" />
            <xsd:element name="mainNotificationConfiguration" type="c:am_NotificationConfiguration_s" minOccurs="0" maxOccurs="unbounded" />
            <xsd:element name="availability" type="c:am_Availability_s" minOccurs="0" maxOccurs="1" />
            <xsd:element name="soundProperty" type="c:gc_SoundProperty_s" minOccurs="0" maxOccurs="unbounded" />
            <xsd:element name="mainSoundProperty" type="c:gc_MainSoundProperty_s" minOccurs="0" maxOccurs="unbounded" />
        </xsd:sequence>
        <xsd:attribute name="id" type="c:am_sinkID_t" use="optional" />
        <xsd:attribute name="domainName" type="xsd:string" use="optional" />
        <xsd:attribute name="name" type="xsd:string" use="required" />
        <xsd:attribute name="volume" type="xsd:short" use="optional" />
        <xsd:attribute name="visible" type="c:gc_Boolean_e" use="optional" />
        <xsd:attribute name="mainVolume" type="xsd:short" use="optional" />
        <xsd:attribute name="className" type="xsd:string" use="optional" />
        <xsd:attribute name="muteState" type="c:am_MuteState_e" use="optional" />
        <xsd:attribute name="connectionFormat" type="xsd:string" use="optional" />
        <xsd:attribute name="soundPropertiesTemplateName" type="xsd:string" use="optional" />
        <xsd:attribute name="mainSoundPropertiesTemplateName" type="xsd:string" use="optional" />
        <xsd:attribute name="notificationConfigurationsTemplateName" type="xsd:string" use="optional" />
        <xsd:attribute name="mainNotificationConfigurationsTemplateName" type="xsd:string" use="optional" />
        <xsd:attribute name="connectionFormatsTemplateName" type="xsd:string" use="optional" />
    </xsd:complexType>
    <xsd:complexType name="am_Gateway_s">
        <xsd:attribute name="id" type="xsd:unsignedShort" use="optional" />
        <xsd:attribute name="name" type="xsd:string" use="required" />
        <xsd:attribute name="conversionMatrix" type="xsd:string" use="optional" />
        <xsd:attribute name="conversionMatrixTemplateName" type="xsd:string" use="optional" />
    </xsd:complexType>
    <xsd:complexType name="am_Domain_s">
        <xsd:attribute name="id" type="xsd:unsignedShort" use="optional" />
        <xsd:attribute name="name" type="xsd:string" use="required" />
        <xsd:attribute name="busName" type="xsd:string" use="optional" />
        <xsd:attribute name="nodeName" type="xsd:string" use="optional" />
        <xsd:attribute name="early" type="c:gc_Boolean_e" use="optional" />
        <xsd:attribute name="complete" type="c:gc_Boolean_e" use="optional" />
        <xsd:attribute name="state" type="c:am_DomainState_e" use="optional" />
    </xsd:complexType>
    <xsd:complexType name="gc_classProperty_s">
        <xsd:attribute name="type" type="c:am_ClassPropertyType_t" />
        <xsd:attribute name="value" type="xsd:short" />
    </xsd:complexType>
    <xsd:complexType name="am_NotificationConfiguration_s">
        <xsd:attribute name="type" type="c:am_NotificationType_t" use="required" />
        <xsd:attribute name="status" type="c:am_NotificationStatus_e" use="required" />
        <xsd:attribute name="parameter" type="xsd:short" use="required" />
    </xsd:complexType>
    <xsd:complexType name="notificationConfigurationTemplate">
        <xsd:sequence>
            <xsd:element name="notificationConfiguration" type="c:am_NotificationConfiguration_s" minOccurs="1" maxOccurs="unbounded" />
        </xsd:sequence>
        <xsd:attribute name="name" type="xsd:string" use="required" />
    </xsd:complexType>
    <xsd:complexType name="mainNotificationConfigurationTemplate">
        <xsd:sequence>
            <xsd:element name="notificationConfiguration" type="c:am_NotificationConfiguration_s" minOccurs="1" maxOccurs="unbounded" />
        </xsd:sequence>
        <xsd:attribute name="name" type="xsd:string" use="required" />
    </xsd:complexType>
    <xsd:complexType name="connectionFormatsTemplate">
        <xsd:simpleContent>
            <xsd:extension base="xsd:string">
                <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:extension>
        </xsd:simpleContent>
    </xsd:complexType>
    <xsd:complexType name="mapMSPToSpTemplate">
        <xsd:sequence>
            <xsd:element name="mapMSPtoSP" type="c:mapMainSoundPropertiesToSoundProperties" minOccurs="0" maxOccurs="unbounded" />
        </xsd:sequence>
        <xsd:attribute name="name" type="xsd:string" use="required" />
    </xsd:complexType>
    <xsd:complexType name="scaleConversionMapTemplate">
        <xsd:simpleContent>
            <xsd:extension base="xsd:string">
                <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:extension>
        </xsd:simpleContent>
    </xsd:complexType>
    <xsd:complexType name="conversionMatrixTemplate">
        <xsd:simpleContent>
            <xsd:extension base="xsd:string">
                <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:extension>
        </xsd:simpleContent>
    </xsd:complexType>
    <xsd:complexType name="gc_class_s">
        <xsd:complexContent>
            <xsd:extension base="c:am_class_s">
                <xsd:sequence>
                    <xsd:element name="topology" type="xsd:token" minOccurs="0" maxOccurs="unbounded" />
                    <xsd:element name="property" type="c:gc_classProperty_s" minOccurs="0" maxOccurs="unbounded" />
                </xsd:sequence>
                <xsd:attribute name="priority" type="xsd:int" use="optional" />
                <xsd:attribute name="isVolumePersistencySupported" type="c:gc_Boolean_e" use="optional" default="FALSE" />
                <xsd:attribute name="defaultVolume" type="xsd:short" use="optional" />
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:complexType name="gc_Source_s">
        <xsd:complexContent>
            <xsd:extension base="c:am_Source_s">
                <xsd:sequence>
                    <xsd:element name="mapMSPtoSP" type="c:mapMainSoundPropertiesToSoundProperties" minOccurs="0" maxOccurs="unbounded" />
                    <xsd:element name="gateway" type="c:gc_Gateway_s" minOccurs="0" maxOccurs="unbounded" />
                </xsd:sequence>
                <xsd:attribute name="baseName" use="optional" type="xsd:string" />
                <xsd:attribute name="registrationType" type="c:gc_Registration_e" use="optional" />
                <xsd:attribute name="isVolumeSupported" type="c:gc_Boolean_e" use="optional" />
                <xsd:attribute name="isPersistencySupported" type="c:gc_Boolean_e" use="optional" />
                <xsd:attribute name="isVolumePersistencySupported" type="c:gc_Boolean_e" use="optional" />
                <xsd:attribute name="priority" type="xsd:int" use="optional" />
                <xsd:attribute name="sourceVolumeMap" type="xsd:string" use="optional" />
                <xsd:attribute name="minVolume" type="xsd:short" use="optional" />
                <xsd:attribute name="maxVolume" type="xsd:short" use="optional" />
                <xsd:attribute name="sourceVolumeMapTemplateName" type="xsd:string" use="optional" />
                <xsd:attribute name="mapMSPToSPTemplateName" type="xsd:string" use="optional" />
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:complexType name="gc_Sink_s">
        <xsd:annotation>
            <xsd:documentation>This is the configuration of the Audio sinks.</xsd:documentation>
        </xsd:annotation>
        <xsd:complexContent>
            <xsd:extension base="c:am_Sink_s">
                <xsd:sequence>
                    <xsd:element name="mapMSPtoSP" type="c:mapMainSoundPropertiesToSoundProperties" minOccurs="0" maxOccurs="unbounded" />
                    <xsd:element name="gateway" type="c:gc_Gateway_s" minOccurs="0" maxOccurs="unbounded" />
                </xsd:sequence>
                <xsd:attribute name="baseName" use="optional" type="xsd:string" />
                <xsd:attribute name="registrationType" type="c:gc_Registration_e" use="optional" />
                <xsd:attribute name="isVolumeSupported" type="c:gc_Boolean_e" use="optional" />
                <xsd:attribute name="isPersistencySupported" type="c:gc_Boolean_e" use="optional" />
                <xsd:attribute name="isVolumePersistencySupported" type="c:gc_Boolean_e" use="optional" />
                <xsd:attribute name="priority" type="xsd:int" use="optional" />
                <xsd:attribute name="sinkVolumeMap" type="xsd:string" use="optional" />
                <xsd:attribute name="listMainVolumesToNormalizedVolumes" type="xsd:string" use="optional" />
                <xsd:attribute name="listNormalizedVolumesToDecibelVolumes" type="xsd:string" use="optional" />
                <xsd:attribute name="mapMSPToSPTemplateName" type="xsd:string" use="optional" />
                <xsd:attribute name="mainVolumesToNormalizedVolumesTemplateName" type="xsd:string" use="optional" />
                <xsd:attribute name="normalizedVolumesToDecibelVolumesTemplateName" type="xsd:string" use="optional" />
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:complexType name="gc_Gateway_s">
        <xsd:complexContent>
            <xsd:extension base="c:am_Gateway_s">
                <xsd:attribute name="sinkName" type="xsd:string" use="optional" />
                <xsd:attribute name="sourceName" type="xsd:string" use="optional" />
                <xsd:attribute name="controlDomainName" type="xsd:string" use="optional" />
                <xsd:attribute name="registrationType" type="c:gc_Registration_e" use="optional" />
                <xsd:attribute name="baseName" type="xsd:string" use="optional" />
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:complexType name="gc_Domain_s">
        <xsd:complexContent>
            <xsd:extension base="c:am_Domain_s">
                <xsd:sequence>
                    <xsd:element name="source" type="c:gc_Source_s" minOccurs="0" maxOccurs="unbounded" />
                    <xsd:element name="sink" type="c:gc_Sink_s" minOccurs="0" maxOccurs="unbounded" />
                    <xsd:element name="gateway" type="c:gc_Gateway_s" minOccurs="0" maxOccurs="unbounded" />
                </xsd:sequence>
                <xsd:attribute name="baseName" use="optional" type="xsd:string" />
                <xsd:attribute name="registrationType" type="c:gc_Registration_e" use="optional" />
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:simpleType name="gc_ReqMacro_e">
       <xsd:restriction base="xsd:string">
         <xsd:enumeration value="REQUESTING"/>
         <xsd:enumeration value="ALL"/>
         <xsd:enumeration value="OTHERS"/>
         <xsd:enumeration value="REQ_TRIG_TYPE"/>
         <xsd:enumeration value="REQ_SINK_NAME"/>
         <xsd:enumeration value="REQ_SOURCE_NAME"/>
         <xsd:enumeration value="REQ_DOMAIN_NAME"/>
         <xsd:enumeration value="REQ_GATEWAY_NAME"/>
         <xsd:enumeration value="REQ_CLASS_NAME"/>
         <xsd:enumeration value="REQ_CON_NAME"/>
         <xsd:enumeration value="REQ_CON_STATE"/>
         <xsd:enumeration value="REQ_STATUS"/>
         <xsd:enumeration value="REQ_MAIN_VOL"/>
         <xsd:enumeration value="REQ_MSP_TYPE"/>
         <xsd:enumeration value="REQ_MSP_VAL"/>
         <xsd:enumeration value="REQ_SYP_TYPE"/>
         <xsd:enumeration value="REQ_SYP_VAL"/>
         <xsd:enumeration value="REQ_AVAIL_STATE"/>
         <xsd:enumeration value="REQ_AVAIL_REASON"/>
         <xsd:enumeration value="REQ_MUTE_STATE"/>
         <xsd:enumeration value="REQ_INT_STATE"/>
         <xsd:enumeration value="REQ_NP_TYPE"/>
         <xsd:enumeration value="REQ_NP_VAL"/>
         <xsd:enumeration value="REQ_NC_TYPE"/>
         <xsd:enumeration value="REQ_NC_STATUS"/>
         <xsd:enumeration value="REQ_NC_PARAM"/>
      </xsd:restriction>
    </xsd:simpleType>
    <xsd:simpleType name="function">
      <xsd:restriction base="xsd:string">
        <!-- skeleton       [a-zA-Z]+\(                                                                                                                    \) -->
        <!-- optional type             ([A-Z]+                                                                                                           )?   -->
        <!-- up to 3 params                   (, *(                                                                                               )){0,3}     -->
        <!-- either macro                          ([A-Z_]+)                                                                                                  -->
        <!-- or numeric                                     |('[+-]?[0-9.]+')                                                                                 -->
        <!-- or name                                                         |('[a-zA-Z_][a-zA-Z 0-9_:]*')                                                    -->
        <!-- or nested function                                                                           |(([a-zA-Z])+\([-+'_:., 0-9a-zA-Z()]*\))            -->
        <xsd:pattern value="[a-zA-Z]+\(([A-Z]+(, *(([A-Z_]+)|('[+-]?[0-9.]+')|('[a-zA-Z_][a-zA-Z 0-9_:]*')|(([a-zA-Z])+\([-+'_:., 0-9a-zA-Z()]*\)))){0,3})?\)" />
      </xsd:restriction>
    </xsd:simpleType>
    <xsd:simpleType name="gc_rampType_t">
        <xsd:union memberTypes="c:gc_ReqMacro_e c:am_RampType_t" />
    </xsd:simpleType>
    <xsd:simpleType name="gc_rampTime_t">
        <xsd:union memberTypes="c:gc_ReqMacro_e xsd:short c:function" />
    </xsd:simpleType>
    <xsd:simpleType name="gc_MuteState_t">
        <xsd:union memberTypes="c:gc_ReqMacro_e c:am_MuteState_e c:function" />
    </xsd:simpleType>
    <xsd:simpleType name="gc_MainVolumeStep_t">
        <xsd:union memberTypes="c:gc_ReqMacro_e xsd:short c:function" />
    </xsd:simpleType>
    <xsd:simpleType name="gc_MainVolume_t">
        <xsd:union memberTypes="c:gc_ReqMacro_e xsd:short c:function" />
    </xsd:simpleType>
    <xsd:simpleType name="gc_VolumeStep_t">
        <xsd:union memberTypes="c:gc_ReqMacro_e xsd:short c:function" />
    </xsd:simpleType>
    <xsd:simpleType name="gc_Volume_t">
        <xsd:union memberTypes="c:gc_ReqMacro_e xsd:short c:function" />
    </xsd:simpleType>
    <xsd:simpleType name="gc_Order_t">
        <xsd:union memberTypes="c:gc_ReqMacro_e c:gc_Order_e c:function" />
    </xsd:simpleType>
    <xsd:simpleType name="gc_PropertyType_t">
        <xsd:union memberTypes="c:gc_ReqMacro_e c:am_MainSoundPropertyType_t c:function" />
    </xsd:simpleType>
    <xsd:simpleType name="gc_PropertyValue_t">
        <xsd:union memberTypes="c:gc_ReqMacro_e xsd:short c:function" />
    </xsd:simpleType>
    <xsd:simpleType name="gc_TimeOut_t">
        <xsd:union memberTypes="c:gc_ReqMacro_e xsd:int c:function" />
    </xsd:simpleType>
    <xsd:simpleType name="gc_ConnectionState_t">
        <xsd:union memberTypes="c:gc_ReqMacro_e c:am_ConnectionState_e c:function" />
    </xsd:simpleType>
    <xsd:simpleType name="gc_ConnectionFormat_t">
        <xsd:union memberTypes="c:gc_ReqMacro_e c:am_ConnectionFormat_t c:function" />
    </xsd:simpleType>
    <xsd:complexType name="action">
        <xsd:attribute name="type" type="c:gc_Action_e" use="optional" />
        <xsd:attribute name="className" type="xsd:string" use="optional" />
        <xsd:attribute name="sourceName" type="xsd:string" use="optional" />
        <xsd:attribute name="sinkName" type="xsd:string" use="optional" />
        <xsd:attribute name="gatewayName" type="xsd:string" use="optional" />
        <xsd:attribute name="rampType" type="c:gc_rampType_t" use="optional" />
        <xsd:attribute name="rampTime" type="c:gc_rampTime_t" use="optional" />
        <xsd:attribute name="muteState" type="c:gc_MuteState_t" use="optional" />
        <xsd:attribute name="mainVolumeStep" type="c:gc_MainVolumeStep_t" use="optional" />
        <xsd:attribute name="mainVolume" type="c:gc_MainVolume_t" use="optional" />
        <xsd:attribute name="volumeStep" type="c:gc_VolumeStep_t" use="optional" />
        <xsd:attribute name="volume" type="c:gc_Volume_t" use="optional" />
        <xsd:attribute name="order" type="c:gc_Order_t" use="optional" />
        <xsd:attribute name="propertyType" type="c:gc_PropertyType_t" use="optional" />
        <xsd:attribute name="propertyValue" type="c:gc_PropertyValue_t" use="optional" />
        <xsd:attribute name="timeOut" type="c:gc_TimeOut_t" use="optional" />
        <xsd:attribute name="pattern" type="xsd:hexBinary" use="optional" />
        <xsd:attribute name="connectionState" type="c:gc_ConnectionState_t" use="optional" />
        <xsd:attribute name="debugType" type="xsd:string" use="optional" />
        <xsd:attribute name="debugValue" type="xsd:string" use="optional" />
        <xsd:attribute name="connectionFormat" type="c:gc_ConnectionFormat_t" use="optional" />
        <xsd:attribute name="exceptSource" type="c:stringListType" use="optional" />
        <xsd:attribute name="exceptSink" type="c:stringListType" use="optional" />
        <xsd:attribute name="exceptClass" type="c:stringListType" use="optional" />
        <xsd:attribute name="notificationConfigurationType" type="xsd:string" use="optional" />
        <xsd:attribute name="notificationConfigurationStatus" type="xsd:string" use="optional" />
        <xsd:attribute name="notificationConfigurationParam" type="xsd:string" use="optional" />
        <xsd:attribute name="listMainSoundProperties" type="xsd:string" use="optional" />
        <xsd:attribute name="listSystemProperties" type="xsd:string" use="optional" />
    </xsd:complexType>
    <xsd:complexType name="process">
        <xsd:sequence>
            <xsd:element name="condition" type="xsd:token" minOccurs="0" maxOccurs="unbounded" />
            <xsd:element name="action" type="c:action" minOccurs="1" maxOccurs="unbounded" />
            <xsd:element name="break" type="c:gc_Boolean_e" minOccurs="0" maxOccurs="1" />
        </xsd:sequence>
        <xsd:attribute name="name" type="xsd:string" use="optional" />
        <xsd:attribute name="priority" type="xsd:int" use="optional" />
    </xsd:complexType>
    <xsd:complexType name="policy">
        <xsd:sequence>
            <xsd:element name="process" type="c:process" minOccurs="1" maxOccurs="unbounded" />
        </xsd:sequence>
        <xsd:attribute name="trigger" type="xsd:string" use="optional"/>
    </xsd:complexType>
    <xsd:complexType name="listClasses">
        <xsd:sequence>
            <xsd:element name="class" type="c:gc_class_s" minOccurs="0" maxOccurs="unbounded" />
        </xsd:sequence>
    </xsd:complexType>
    <xsd:complexType name="listPolicies">
        <xsd:sequence>
            <xsd:element name="policy" type="c:policy" minOccurs="0" maxOccurs="unbounded" />
        </xsd:sequence>
    </xsd:complexType>
    <xsd:complexType name="gc_templates_s">
        <xsd:sequence>
            <xsd:element name="scaleConversionMap" type="c:scaleConversionMapTemplate" minOccurs="0" maxOccurs="unbounded" />
            <xsd:element name="domain" type="c:gc_Domain_s" minOccurs="0" maxOccurs="unbounded" />
            <xsd:element name="source" type="c:gc_Source_s" minOccurs="0" maxOccurs="unbounded" />
            <xsd:element name="sink" type="c:gc_Sink_s" minOccurs="0" maxOccurs="unbounded" />
            <xsd:element name="gateway" type="c:gc_Gateway_s" minOccurs="0" maxOccurs="unbounded" />
            <xsd:element name="soundProperties" type="c:soundPropertiesTemplate" minOccurs="0" maxOccurs="unbounded" />
            <xsd:element name="mainSoundProperties" type="c:mainSoundPropertiesTemplate" minOccurs="0" maxOccurs="unbounded" />
            <xsd:element name="notificationConfigurations" type="c:notificationConfigurationTemplate" minOccurs="0" maxOccurs="unbounded" />
            <xsd:element name="connectionFormat" type="c:connectionFormatsTemplate" minOccurs="0" maxOccurs="unbounded" />
            <xsd:element name="listmapMSPToSP" type="c:mapMSPToSpTemplate" minOccurs="0" maxOccurs="unbounded" />
            <xsd:element name="conversionMatrix" type="c:conversionMatrixTemplate" minOccurs="0" maxOccurs="unbounded" />
        </xsd:sequence>
    </xsd:complexType>
    <xsd:complexType name="system">
        <xsd:sequence>
            <xsd:element name="templates" type="c:gc_templates_s" minOccurs="0" maxOccurs="unbounded" />
            <xsd:element name="domain" type="c:gc_Domain_s" minOccurs="0" maxOccurs="unbounded" />
            <xsd:element name="source" type="c:gc_Source_s" minOccurs="0" maxOccurs="unbounded" />
            <xsd:element name="sink" type="c:gc_Sink_s" minOccurs="0" maxOccurs="unbounded" />
            <xsd:element name="gateway" type="c:gc_Gateway_s" minOccurs="0" maxOccurs="unbounded" />
        </xsd:sequence>
    </xsd:complexType>
    <xsd:complexType name="configuration">
        <xsd:sequence>
            <xsd:element name="classes" type="c:listClasses" minOccurs="0" maxOccurs="1" />
            <xsd:element name="system" type="c:system" minOccurs="0" maxOccurs="1" />
            <xsd:element name="policies" type="c:listPolicies" minOccurs="0" maxOccurs="1" />
            <xsd:element name="properties" type="c:listSystemProperties" minOccurs="0" maxOccurs="1" />
        </xsd:sequence>
    </xsd:complexType>
    <xsd:element name="generic" type="c:configuration" />
</xsd:schema>
