<?xml version="1.0" encoding="UTF-8"?>
<c:generic xmlns:c="controller" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="controller audiomanagertypes.xsd ">
    <classes>
        <class name="BASE" priority="1" type="C_PLAYBACK">
            <topology>mySink0^mySink1^mySink2^mySink3^mySink4^mySink5^mySink6^mySink7^mySink8^mySink9^mySink10=mySource0^mySource1^mySource2^mySource3^mySource4^mySource5^mySource6^mySource7^mySource8^mySource9^mySource10</topology>
        </class>
    </classes>
    <system>
        <templates>
            <source name="SourceTemplate" domainName="UNKNOWN" className="BASE" volume="0" visible="TRUE"
                    sourceState="SS_ON" connectionFormat="CF_GENIVI_ANALOG"
                    interruptState="IS_OFF" priority="1" isVolumeSupported="TRUE">
                <availability availability="A_AVAILABLE" availabilityReason="AR_UNKNOWN" />
                <soundProperty type="SP_GENIVI_TREBLE" value="5" minValue="0" maxValue="10" />
                <soundProperty type="SP_GENIVI_MID" value="5" minValue="0" maxValue="10" />
                <soundProperty type="SP_GENIVI_BASS" value="5" minValue="0" maxValue="10" />
                <mainSoundProperty type="MSP_GENIVI_TREBLE" value="5" minValue="0" maxValue="10" />
                <mainSoundProperty type="MSP_GENIVI_MID" value="5" minValue="0" maxValue="10" />
                <mainSoundProperty type="MSP_GENIVI_BASS" value="5" minValue="0" maxValue="10" />
                <mapMSPtoSP mappingDirection="MD_BOTH">MSP_UNKNOWN,SP_UNKNOWN</mapMSPtoSP>
                <mapMSPtoSP mappingDirection="MD_BOTH">MSP_GENIVI_TREBLE,SP_GENIVI_TREBLE</mapMSPtoSP>
            </source>
            <sink id="0" domainName="UNKNOWN" name="SinkTemplate" volume="0" visible="TRUE"
                    mainVolume="100" className="UNKNOWN" muteState="MS_UNMUTED" connectionFormat="CF_GENIVI_ANALOG"
                    isVolumeSupported="TRUE" priority="1"
                    listMainVolumesToNormalizedVolumes="0,0.0;100,1.0"
                    listNormalizedVolumesToDecibelVolumes="0.0,-3000.0;1.0,0.0">
                <availability availability="A_AVAILABLE" availabilityReason="AR_GENIVI_NEWMEDIA" />
                <soundProperty type="SP_GENIVI_TREBLE" value="5" minValue="0" maxValue="10" />
                <soundProperty type="SP_GENIVI_MID" value="5" minValue="0" maxValue="10" />
                <soundProperty type="SP_GENIVI_BASS" value="5" minValue="0" maxValue="10" />
                <mainSoundProperty type="MSP_GENIVI_TREBLE" value="5" minValue="0" maxValue="10" />
                <mainSoundProperty type="MSP_GENIVI_MID" value="5" minValue="0" maxValue="10" />
                <mainSoundProperty type="MSP_GENIVI_BASS" value="5" minValue="0" maxValue="10" />
                <mapMSPtoSP mappingDirection="MD_BOTH">MSP_UNKNOWN,SP_UNKNOWN</mapMSPtoSP>
                <mapMSPtoSP mappingDirection="MD_BOTH">MSP_GENIVI_TREBLE,SP_GENIVI_TREBLE</mapMSPtoSP>
                <mapMSPtoSP mappingDirection="MD_BOTH">MSP_GENIVI_MID,SP_GENIVI_MID</mapMSPtoSP>
                <mapMSPtoSP mappingDirection="MD_BOTH">MSP_GENIVI_BASS,SP_GENIVI_BASS</mapMSPtoSP>
            </sink>
        </templates>
        <domain name="AsyncDomain1" busName="RoutingAsync" nodeName="AsyncNode1" early="FALSE" complete="TRUE"
                state="DS_CONTROLLED" registrationType="REG_ROUTER">
            <source name="mySource0" baseName="SourceTemplate" registrationType="REG_ROUTER" />
            <source name="mySource1" baseName="SourceTemplate" id="1" registrationType="REG_ROUTER" />
            <source name="mySource2" baseName="SourceTemplate" id="2" registrationType="REG_ROUTER" />
            <source name="mySource3" baseName="SourceTemplate" id="3" registrationType="REG_ROUTER" />
            <source name="mySource4" baseName="SourceTemplate" id="4" registrationType="REG_ROUTER" />
            <source name="mySource5" baseName="SourceTemplate" id="5" className="BASE" registrationType="REG_ROUTER" />
            <source name="mySource6" baseName="SourceTemplate" id="6" registrationType="REG_ROUTER" />
            <source name="mySource7" baseName="SourceTemplate" id="7" registrationType="REG_ROUTER" />
            <source name="mySource8" id="8" baseName="SourceTemplate" registrationType="REG_ROUTER" />
            <source baseName="SourceTemplate" id="9" name="mySource9" className="BASE" registrationType="REG_ROUTER" />
            <source name="mySource10" baseName="SourceTemplate" id="10" registrationType="REG_ROUTER" />
            <sink name="mySink0" baseName="SinkTemplate" registrationType="REG_ROUTER" />
            <sink name="mySink1" baseName="SinkTemplate" id="1" className="BASE" />
            <sink baseName="SinkTemplate" id="2" name="mySink2" className="BASE" registrationType="REG_ROUTER" />
            <sink baseName="SinkTemplate" id="3" name="mySink3" className="BASE" registrationType="REG_ROUTER" />
            <sink baseName="SinkTemplate" id="4" name="mySink4" className="BASE" registrationType="REG_ROUTER" />
            <sink baseName="SinkTemplate" id="5" name="mySink5" className="BASE" registrationType="REG_ROUTER" />
            <sink baseName="SinkTemplate" id="6" name="mySink6" className="BASE" registrationType="REG_ROUTER" />
            <sink baseName="SinkTemplate" id="7" name="mySink7" className="BASE" registrationType="REG_ROUTER" />
            <sink baseName="SinkTemplate" id="8" name="mySink8" className="BASE" registrationType="REG_ROUTER" />
            <sink baseName="SinkTemplate" id="9" name="mySink9" className="BASE" registrationType="REG_ROUTER" />
            <sink baseName="SinkTemplate" id="10" name="mySink10" className="BASE" registrationType="REG_ROUTER" />
            <!-- This is a single domain example, therefore no gateway is present -->
        </domain>
    </system>
    <policies>
        <!--Connect Policy Start-->
        <policy trigger="USER_CONNECTION_REQUEST">
            <process>
                <condition>name(CLASS, REQUESTING) EQ "BASE"</condition>
                <condition>connectionState(CONNECTIONOFCLASS, REQUESTING, OTHERS) INC CS_CONNECTED</condition>
                <action type="ACTION_DISCONNECT" className="BASE" connectionState="CS_CONNECTED" />
            </process>
            <process>
                <action type="ACTION_SET_VOLUME" sinkName="REQUESTING" volumeStep="-5" timeOut="10000" />
                <action type="ACTION_CONNECT" className="REQUESTING" timeOut="5000" />
                <action type="ACTION_SET_VOLUME" sinkName="REQUESTING" volumeStep="5" timeOut="10000" />
            </process>
        </policy>
        <!--Connect policy end-->
        <!--Disconnect policy start-->
        <policy trigger="USER_DISCONNECTION_REQUEST">
            <process>
                <action type="ACTION_DISCONNECT" sourceName="REQUESTING" sinkName="REQUESTING" />
            </process>
        </policy>
        <!--Disconnect policy end -->
        <!-- default volume policy start -->
        <policy trigger="USER_SET_VOLUME">
            <process>
                <action type="ACTION_SET_VOLUME" sinkName="REQUESTING" />
            </process>
        </policy>
        <!-- default volume policy end -->
        <!-- default mute policy start -->
        <policy trigger="USER_SET_SINK_MUTE_STATE">
            <process>
                <condition>muteState(USER,REQUESTING) EQ MS_MUTED</condition>
                <action type="ACTION_MUTE" sinkName="REQUESTING" timeOut="30000" />
            </process>
            <process>
                <condition>muteState(USER,REQUESTING) EQ MS_UNMUTED</condition>
                <action type="ACTION_UNMUTE" sinkName="REQUESTING" timeOut="30000" />
            </process>
        </policy>
        <!-- default mute policy end -->
        <!-- default set sink sound property policy start -->
        <policy trigger="USER_SET_SINK_MAIN_SOUND_PROPERTY">
            <process>
                <action type="ACTION_SET_PROPERTY" sinkName="REQUESTING" />
            </process>
        </policy>
        <!-- default set sink sound property policy end -->
        <!-- default set source sound property policy start -->
        <policy trigger="USER_SET_SOURCE_MAIN_SOUND_PROPERTY">
            <process>
                <action type="ACTION_SET_PROPERTY" sourceName="REQUESTING" />
            </process>
        </policy>
        <policy trigger="USER_SET_SYSTEM_PROPERTY">
            <process>
                <action type="ACTION_DEBUG" />
            </process>
        </policy>
    </policies>
    <properties>
        <systemProperty type="SYP_GLOBAL_LOG_THRESHOLD" value="2" />
    </properties>
</c:generic>